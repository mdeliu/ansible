---
- name: Configure Fresh Debian Server
  hosts: all
  become: true
  gather_facts: true
# --- not neccessary as we import the ssh key from cloud-init
#  vars:
#    ssh_key_path: /path/to/your/ssh/key/id_rsa

  tasks:
  
# --- not neccessary as we import the ssh key from cloud-init
#    - name: Import SSH Key
#      authorized_key:
#        user: "{{ ansible_ssh_user }}"
#        state: present
#        key: "{{ lookup('file', ssh_key_path) }}"

    - name: Change SSH Port and Permit Root Login
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - { regexp: '^#?Port', line: 'Port 6666' }
        - { regexp: '^#?PermitRootLogin', line: 'PermitRootLogin yes' }

    - name: Install fail2ban
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - fail2ban
      notify: restart fail2ban
        
    - name: Create fail2ban jail.local
      template:
        src: "{{ playbook_dir }}/jail.local.j2"
        dest: /etc/fail2ban/jail.local
      notify: restart fail2ban

    - name: Create /var/log/auth.log
      file:
        path: /var/log/auth.log
        state: touch

    - name: Install UFW and allow necessary ports
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - ufw
      notify: restart ufw

    - name: Configure UFW
      ufw:
        state: enabled
        policy: deny
        logging: on

    - name: Allow all access to tcp port 80
      ufw:
       rule: allow
       port: 80
       proto: tcp

    - name: Allow all access to tcp port 443
      ufw:
       rule: allow
       port: 443
       proto: tcp
       
    - name: Allow all access to tcp port 6666
      ufw:
       rule: allow
       port: 6666
       proto: tcp

    - name: Install Docker dependencies
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
      notify: update apt cache

    - name: Add the GPG key for Docker
      shell: 'curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg'
      
    - name: Add the repository to fetch the docker package
      shell: 'echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian bullseye stable" | tee /etc/apt/sources.list.d/docker.list'

    - name: Update apt repo and cache on all Debian/Ubuntu boxes
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

    - name: Install Docker packages
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - docker-ce
        - docker-ce-cli
        - containerd.io
      notify: start Docker service
     
    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: 'a+x'

  handlers:
    - name: restart fail2ban
      service:
        name: fail2ban
        state: restarted

    - name: restart ufw
      service:
        name: ufw
        state: restarted

    - name: start Docker service
      service:
        name: docker
        state: started
 
    - name: restart ssh
      service:
        name: ssh
        state: restarted
